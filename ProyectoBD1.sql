/*CATALOGOS*/

CREATE TABLE DEPARTAMENTO(
ID_DEPARTAMENTO NUMBER (10),
DEPARTAMENTO VARCHAR2 (30),
CONSTRAINT PK_DEPARTAMENTO PRIMARY KEY(ID_DEPARTAMENTO)
);

CREATE TABLE POSICION(
ID_POSICION NUMBER (10),
POSICION VARCHAR2 (30),
CONSTRAINT PK_POSICION PRIMARY KEY(ID_POSICION)
);

CREATE TABLE COLOR_PINTURA(
ID_COLOR_PINTURA NUMBER (10),
COLOR VARCHAR2 (30),
CONSTRAINT PK_COLO_PINTURA PRIMARY KEY(ID_COLOR_PINTURA)
);

CREATE TABLE PRESENTACION_PINTURA(
ID_PRESENTACION_PINTURA NUMBER (10),
PRESENTACION_PINTURA VARCHAR2 (30),
CONSTRAINT PK_PRESENTACION_PINTURA PRIMARY KEY(ID_PRESENTACION_PINTURA)
);

CREATE TABLE PROVEEDOR(
ID_PROVEEDOR NUMBER (10),
PROVEEDOR VARCHAR2 (30),
DIRECCION VARCHAR2 (100),
CONSTRAINT PK_PROVEEDOR PRIMARY KEY(ID_PROVEEDOR)
);

CREATE TABLE HERRAMIENTA(
ID_HERRAMIENTA NUMBER (10),
NOMBRE VARCHAR2 (30),
CONSTRAINT PK_HERRAMIENTA PRIMARY KEY(ID_HERRAMIENTA)
);

/*TABLAS DEPENDIENTES DE CATALOGO*/
CREATE TABLE EMPLEADO(
ID_EMPLEADO NUMBER (10),
DPI NUMBER (13),
NOMBRE VARCHAR2 (30),
APELLIDO VARCHAR2 (30),
EDAD NUMBER (10),
CORREO VARCHAR2 (30),
FECHA_CONTRATACION DATE,
ID_DEPARTAMENTO NUMBER (10),
ID_POSICION NUMBER (10),
CONTRASENA VARCHAR2 (30),
CONSTRAINT PK_ID_EMPLEADO PRIMARY KEY(ID_EMPLEADO),
CONSTRAINT FK_ID_DEPARTAMENTO FOREIGN KEY (ID_DEPARTAMENTO) REFERENCES DEPARTAMENTO(ID_DEPARTAMENTO),
CONSTRAINT FK_ID_POSICION FOREIGN KEY (ID_POSICION) REFERENCES POSICION(ID_POSICION)
);

CREATE TABLE PINTURA(
ID_PINTURA NUMBER (10),
ID_COLOR NUMBER (10),
ID_PRESENTACION_PINTURA NUMBER (10),
CANTIDAD_L NUMBER (10),
PRECIO NUMBER (10),
CONSTRAINT PK_PINTURA PRIMARY KEY(ID_PINTURA),
CONSTRAINT FK_ID_COLOR FOREIGN KEY (ID_COLOR) REFERENCES COLOR_PINTURA(ID_COLOR_PINTURA),
CONSTRAINT FK_PRESENTACION_PINTURA FOREIGN KEY (ID_PRESENTACION_PINTURA) REFERENCES PRESENTACION_PINTURA(ID_PRESENTACION_PINTURA)
);

CREATE TABLE INVENTARIO_HERRAMIENTA(
ID_INVENTARIO_HERRAMIENTA NUMBER (10),
ID_HERRAMIENTA NUMBER (10),
CANTIDAD NUMBER (10),
CONSTRAINT PK_INVENTAIO_HERRAMIENTA PRIMARY KEY(ID_INVENTARIO_HERRAMIENTA),
CONSTRAINT FK_ID_HERRAMIENTA FOREIGN KEY (ID_HERRAMIENTA) REFERENCES HERRAMIENTA(ID_HERRAMIENTA)
);

CREATE TABLE PEDIDO(
ID_PEDIDO NUMBER (10),
ID_PROVEEDOR NUMBER (10),
COMPOSICION_BASE VARCHAR2 (50),
COLORANTE VARCHAR2 (50),
CONSTRAINT PK_PEDIDO PRIMARY KEY(ID_PEDIDO),
CONSTRAINT FK_ID_PROVEEDOR FOREIGN KEY (ID_PROVEEDOR) REFERENCES PROVEEDOR(ID_PROVEEDOR)
);

/*TABLA BITACORA*/

CREATE TABLE BITACORAPROYECTO1(
ID_BITACORAPROYECTO NUMBER (10),
USUARIO VARCHAR2 (30),
TABLA VARCHAR2 (30),
ACCION VARCHAR2 (30),
DATO_ANTERIOR VARCHAR2 (30),
DATO_NUEVO VARCHAR2 (30)
);


/*SECUENCIAS*/
CREATE SEQUENCE ID_BITACORA
START WITH 1
INCREMENT BY 1
MAXVALUE 99999
MINVALUE 1;

   
/*TRIGGERS*/
CREATE OR REPLACE TRIGGER TRG_AIUR_EMPLEADO
AFTER INSERT OR UPDATE ON EMPLEADO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN 
INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'Nuevo empleado', 'INSERCION' , 'NUEVO USUARIO', :NEW.NOMBRE);
    END IF;
    
    IF UPDATING THEN
    
    IF :NEW.ID_EMPLEADO <> :OLD.ID_EMPLEADO THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'ID_EMPLEADO', 'ACTUALIZACION', :OLD.ID_EMPLEADO, :NEW.ID_EMPLEADO);
    END IF;
    
        IF :NEW.DPI <> :OLD.DPI THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'DPI', 'ACTUALIZACION', :OLD.DPI, :NEW.DPI);
    END IF;

        IF :NEW.NOMBRE <> :OLD.NOMBRE THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'NOMBRE', 'ACTUALIZACION', :OLD.NOMBRE, :NEW.NOMBRE);
    END IF;
        
        IF :NEW.APELLIDO <> :OLD.APELLIDO THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'APELLIDO', 'ACTUALIZACION', :OLD.APELLIDO, :NEW.APELLIDO);
    END IF;
        
        IF :NEW.EDAD <> :OLD.EDAD THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'EDAD', 'ACTUALIZACION', :OLD.EDAD, :NEW.EDAD);
    END IF;
        
        IF :NEW.CORREO <> :OLD.CORREO THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'CORREO', 'ACTUALIZACION', :OLD.CORREO, :NEW.CORREO);
    END IF;
        
        IF :NEW.FECHA_CONTRATACION <> :OLD.FECHA_CONTRATACION THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'FECHA_CONTRATACION', 'ACTUALIZACION', :OLD.FECHA_CONTRATACION, :NEW.FECHA_CONTRATACION);
    END IF;
        
        IF :NEW.ID_DEPARTAMENTO <> :OLD.ID_DEPARTAMENTO THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'DEPARTAMENTO', 'ACTUALIZACION', :OLD.ID_DEPARTAMENTO, :NEW.ID_DEPARTAMENTO);
    END IF;
        
        IF :NEW.ID_POSICION <> :OLD.ID_POSICION THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'POSICION', 'ACTUALIZACION', :OLD.ID_POSICION, :NEW.ID_POSICION);
    END IF;
        
        IF :NEW.CONTRASENA <> :OLD.CONTRASENA THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'CONTRASENA', 'ACTUALIZACION', :OLD.CONTRASENA, :NEW.CONTRASENA);
    END IF;
    
    END IF;
END;    

CREATE OR REPLACE TRIGGER TRG_BDR_EMPLEADO
BEFORE DELETE ON EMPLEADO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'ID_EMPLEADO', 'USUARIO ELIMINADO', :OLD.ID_EMPLEADO, :NEW.ID_EMPLEADO);

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'DPI', 'USUARIO ELIMINADO', :OLD.DPI, :NEW.DPI);

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'NOMBRE', 'USUARIO ELIMINADO', :OLD.NOMBRE, :NEW.NOMBRE);

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'APELLIDO', 'USUARIO ELIMINADO', :OLD.APELLIDO, :NEW.APELLIDO);

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'EDAD', 'USUARIO ELIMINADO', :OLD.EDAD, :NEW.EDAD);

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'CORREO', 'USUARIO ELIMINADO', :OLD.CORREO, :NEW.CORREO);

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'FECHA_CONTRATACION', 'USUARIO ELIMINADO', :OLD.FECHA_CONTRATACION, :NEW.FECHA_CONTRATACION);

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'DEPARTAMENTO', 'USUARIO ELIMINADO', :OLD.ID_DEPARTAMENTO, :NEW.ID_DEPARTAMENTO);

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'POSICION', 'USUARIO ELIMINADO', :OLD.ID_POSICION, :NEW.ID_POSICION);

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'EMPLEADO', 'CONTRASENA', 'USUARIO ELIMINADO', :OLD.CONTRASENA, :NEW.CONTRASENA);
 
END;


CREATE OR REPLACE TRIGGER TRG_AIUR_DEPARTAMENTO
AFTER INSERT OR UPDATE ON DEPARTAMENTO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN 
INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'DEPARTAMENTO', 'Nuevo DEPARTAMENTO', 'INSERCION' , 'NUEVO DEPARTAMENTO', :NEW.DEPARTAMENTO);
    END IF;
    
    IF UPDATING THEN
    
    IF :NEW.ID_DEPARTAMENTO <> :OLD.ID_DEPARTAMENTO THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'DEPARTAMENTO', 'ID_DEPARTAMENTO', 'ACTUALIZACION', :OLD.ID_DEPARTAMENTO, :NEW.ID_DEPARTAMENTO);
    END IF;
    
        IF :NEW.DEPARTAMENTO <> :OLD.DEPARTAMENTO THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'DEPARTAMENTO', 'DEPARTAMENTO', 'ACTUALIZACION', :OLD.DEPARTAMENTO, :NEW.DEPARTAMENTO);
    END IF;

    END IF;
END;    

CREATE OR REPLACE TRIGGER TRG_BDR_DEPARTAMENTO
BEFORE DELETE ON DEPARTAMENTO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'DEPARTAMENTO', 'ID_DEPARTAMENTO', 'DEPARTAMENTO ELIMINADO', :OLD.ID_DEPARTAMENTO, :NEW.ID_DEPARTAMENTO);

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'DEPARTAMENTO', 'DEPARTAMENTO', 'DEPARTAMENTO ELIMINADO', :OLD.DEPARTAMENTO, :NEW.DEPARTAMENTO);

END;


CREATE OR REPLACE TRIGGER TRG_AIUR_POSICION
AFTER INSERT OR UPDATE ON POSICION
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN 
INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'POSICION', 'Nueva POSICION', 'INSERCION' , 'NUEVA POSICION', :NEW.POSICION);
    END IF;
    
    IF UPDATING THEN
    
    IF :NEW.ID_POSICION <> :OLD.ID_POSICION THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'POSICION', 'ID_POSICION', 'ACTUALIZACION', :OLD.ID_POSICION, :NEW.ID_POSICION);
    END IF;
    
        IF :NEW.POSICION <> :OLD.POSICION THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'POSICION', 'POSICION', 'ACTUALIZACION', :OLD.POSICION, :NEW.POSICION);
    END IF;

    END IF;
END;    

CREATE OR REPLACE TRIGGER TRG_BDR_POSICION
BEFORE DELETE ON POSICION
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'POSICION', 'ID_POSICION', 'DEPARTAMENTO ELIMINADO', :OLD.ID_POSICION, :NEW.ID_POSICION);

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'POSICION', 'POSICION', 'DEPARTAMENTO ELIMINADO', :OLD.POSICION, :NEW.POSICION);

END;



CREATE OR REPLACE TRIGGER TRG_AIUR_PINTURA
AFTER INSERT OR UPDATE ON PINTURA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN 
INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PINTURA', 'Nueva Pintura', 'INSERCION' , 'NUEVA PINTURA', :NEW.ID_COLOR);
    END IF;
    
    IF UPDATING THEN
    
    IF :NEW.ID_PINTURA <> :OLD.ID_PINTURA THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PINTURA', 'ID_PINTURA', 'ACTUALIZACION', :OLD.ID_PINTURA, :NEW.ID_PINTURA);
    END IF;
    
        IF :NEW.ID_COLOR <> :OLD.ID_COLOR THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PINTURA', 'COLOR', 'ACTUALIZACION', :OLD.ID_COLOR, :NEW.ID_COLOR);
    END IF;

    IF :NEW.ID_PRESENTACION_PINTURA <> :OLD.ID_PRESENTACION_PINTURA THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PINTURA', 'PRESENTACION PINTURA', 'ACTUALIZACION', :OLD.ID_PRESENTACION_PINTURA, :NEW.ID_PRESENTACION_PINTURA);
    END IF;

    IF :NEW.CANTIDAD_L <> :OLD.CANTIDAD_L THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PINTURA', 'CANTIDAD - LITROS', 'ACTUALIZACION', :OLD.CANTIDAD_L, :NEW.CANTIDAD_L);
    END IF;

    IF :NEW.PRECIO <> :OLD.PRECIO THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PINTURA', 'PRECIO', 'ACTUALIZACION', :OLD.PRECIO, :NEW.PRECIO);
    END IF;

    END IF;
END;    

CREATE OR REPLACE TRIGGER TRG_BDR_PINTURA
BEFORE DELETE ON PINTURA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PINTURA', 'ID_PINTURA', 'PINTURA ELIMINADA', :OLD.ID_PINTURA, :NEW.ID_PINTURA);

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PINTURA', 'COLOR', 'PINTURA ELIMINADA', :OLD.ID_COLOR, :NEW.ID_COLOR);

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PINTURA', 'PRESENTACION PINTURA', 'PINTURA ELIMINADA', :OLD.ID_PRESENTACION_PINTURA, :NEW.ID_PRESENTACION_PINTURA);

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PINTURA', 'CANTIDAD - LITROS', 'PINTURA ELIMINADA', :OLD.CANTIDAD_L, :NEW.CANTIDAD_L);

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PINTURA', 'PRECIO', 'PINTURA ELIMINADA', :OLD.PRECIO, :NEW.PRECIO);
    

END;



CREATE OR REPLACE TRIGGER TRG_AIUR_COLOR_PINTURA
AFTER INSERT OR UPDATE ON COLOR_PINTURA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN 
INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'COLOR PINTURA', 'Nuevo color Pintura', 'INSERCION' , 'NUEVO COLOR PINTURA', :NEW.COLOR);
    END IF;
    
    IF UPDATING THEN
    
    IF :NEW.ID_COLOR_PINTURA <> :OLD.ID_COLOR_PINTURA THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'COLOR PINTURA', 'ID COLOR PINTURA', 'ACTUALIZACION', :OLD.ID_COLOR_PINTURA, :NEW.ID_COLOR_PINTURA);
    END IF;
    
        IF :NEW.COLOR <> :OLD.COLOR THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'COLOR PINTURA', 'COLOR', 'ACTUALIZACION', :OLD.COLOR, :NEW.COLOR);
    END IF;

    END IF;
END;    

CREATE OR REPLACE TRIGGER TRG_BDR_COLOR_PINTURA
BEFORE DELETE ON COLOR_PINTURA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN

INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'COLOR PINTURA', 'ID COLOR PINTURA', 'COLOR ELIMINADO', :OLD.ID_COLOR_PINTURA, :NEW.ID_COLOR_PINTURA);

INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'COLOR PINTURA', 'COLOR', 'COLOR ELIMINADO', :OLD.COLOR, :NEW.COLOR);
    
END;



CREATE OR REPLACE TRIGGER TRG_AIUR_COLOR_PRESENTACION_PINTURA
AFTER INSERT OR UPDATE ON PRESENTACION_PINTURA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN 
INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PRESENTACION PINTURA', 'Nueva presentacion Pintura', 'INSERCION' , 'Nueva presentacion PINTURA', :NEW.PRESENTACION_PINTURA);
    END IF;
    
    IF UPDATING THEN
    
    IF :NEW.ID_PRESENTACION_PINTURA <> :OLD.ID_PRESENTACION_PINTURA THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PRESENTACION PINTURA', 'ID PRESENTACION PINTURA', 'ACTUALIZACION', :OLD.ID_PRESENTACION_PINTURA, :NEW.ID_PRESENTACION_PINTURA);
    END IF;
    
        IF :NEW.PRESENTACION_PINTURA <> :OLD.PRESENTACION_PINTURA THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PRESENTACION PINTURA', 'PRESENTACION PINTURA', 'ACTUALIZACION', :OLD.PRESENTACION_PINTURA, :NEW.PRESENTACION_PINTURA);
    END IF;

    END IF;
END;    

CREATE OR REPLACE TRIGGER TRG_BDR_PRESENTACION_PINTURA
BEFORE DELETE ON PRESENTACION_PINTURA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN

INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PRESENTACION PINTURA', 'ID PRESENTACION PINTURA', 'PRESENTACION PINTURA ELIMINADA', :OLD.ID_PRESENTACION_PINTURA, :NEW.ID_PRESENTACION_PINTURA);

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PRESENTACION PINTURA', 'PRESENTACION PINTURA', 'PRESENTACION PINTURA ELIMINADA', :OLD.PRESENTACION_PINTURA, :NEW.PRESENTACION_PINTURA);    

END;


CREATE OR REPLACE TRIGGER TRG_AIUR_INVENTARIO_HERRAMIENTA
AFTER INSERT OR UPDATE ON INVENTARIO_HERRAMIENTA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN 
INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'INVENTARIO HERRAMIENTA', 'Nuevo INVENTARIO HERRAMIENTA', 'INSERCION' , 'Nuevo INVENTARIO_HERRAMIENTA', :NEW.ID_HERRAMIENTA);
    END IF;
    
    IF UPDATING THEN
    
    IF :NEW.ID_INVENTARIO_HERRAMIENTA <> :OLD.ID_INVENTARIO_HERRAMIENTA THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'INVENTARIO HERRAMIENTA', 'ID INVENTARIO HERRAMIENTA', 'ACTUALIZACION', :OLD.ID_INVENTARIO_HERRAMIENTA, :NEW.ID_INVENTARIO_HERRAMIENTA);
    END IF;
    
        IF :NEW.ID_HERRAMIENTA <> :OLD.ID_HERRAMIENTA THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'INVENTARIO HERRAMIENTA', 'ID HERRAMIENTA', 'ACTUALIZACION', :OLD.ID_HERRAMIENTA, :NEW.ID_HERRAMIENTA);
    END IF;

        IF :NEW.CANTIDAD <> :OLD.CANTIDAD THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'INVENTARIO HERRAMIENTA', 'CANTIDAD', 'ACTUALIZACION', :OLD.CANTIDAD, :NEW.CANTIDAD);
    END IF;

    END IF;
END;    

CREATE OR REPLACE TRIGGER TRG_BDR_INVENTARIO_HERRAMIENTA
BEFORE DELETE ON INVENTARIO_HERRAMIENTA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN

INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'INVENTARIO HERRAMIENTA', 'ID INVENTARIO HERRAMIENTA', 'ELIMINACION INVENTARIO HERRAMIENTA', :OLD.ID_INVENTARIO_HERRAMIENTA, :NEW.ID_INVENTARIO_HERRAMIENTA);

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'INVENTARIO HERRAMIENTA', 'ID HERRAMIENTA', 'ELIMINACION INVENTARIO HERRAMIENTA', :OLD.ID_HERRAMIENTA, :NEW.ID_HERRAMIENTA);

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'INVENTARIO HERRAMIENTA', 'CANTIDAD', 'ELIMINACION INVENTARIO HERRAMIENTA', :OLD.CANTIDAD, :NEW.CANTIDAD);

END;


CREATE OR REPLACE TRIGGER TRG_AIUR_PROVEEDOR
AFTER INSERT OR UPDATE ON PROVEEDOR
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN 
INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PROVEEDOR', 'Nuevo PROVEEDOR', 'INSERCION' , 'Nuevo PROVEEDOR', :NEW.PROVEEDOR);
    END IF;
    
    IF UPDATING THEN
    
    IF :NEW.ID_PROVEEDOR <> :OLD.ID_PROVEEDOR THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PROVEEDOR', 'ID PROVEEDOR', 'ACTUALIZACION', :OLD.ID_PROVEEDOR, :NEW.ID_PROVEEDOR);
    END IF;
    
        IF :NEW.PROVEEDOR <> :OLD.PROVEEDOR THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PROVEEDOR', 'PROVEEDOR', 'ACTUALIZACION', :OLD.PROVEEDOR, :NEW.PROVEEDOR);
    END IF;

        IF :NEW.DIRECCION <> :OLD.DIRECCION THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PROVEEDOR', 'DIRECCION', 'ACTUALIZACION', :OLD.DIRECCION, :NEW.DIRECCION);
    END IF;

    END IF;
END;    

CREATE OR REPLACE TRIGGER TRG_BDR_PROVEEDOR
BEFORE DELETE ON PROVEEDOR
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN

    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PROVEEDOR', 'ID PROVEEDOR', 'PROVEEDOR ELIMINADO', :OLD.ID_PROVEEDOR, :NEW.ID_PROVEEDOR);

INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PROVEEDOR', 'PROVEEDOR', 'PROVEEDOR ELIMINADO', :OLD.PROVEEDOR, :NEW.PROVEEDOR);

INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PROVEEDOR', 'DIRECCION', 'PROVEEDOR ELIMINADO', :OLD.DIRECCION, :NEW.DIRECCION);

END;


CREATE OR REPLACE TRIGGER TRG_AIUR_PEDIDO
AFTER INSERT OR UPDATE ON PEDIDO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN 
INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PEDIDO', 'Nuevo PEDIDO', 'INSERCION' , 'Nuevo PEDIDO', :NEW.ID_PEDIDO);
    END IF;
    
    IF UPDATING THEN
    
    IF :NEW.ID_PEDIDO <> :OLD.ID_PEDIDO THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PEDIDO', 'ID PEDIDO', 'ACTUALIZACION', :OLD.ID_PEDIDO, :NEW.ID_PEDIDO);
    END IF;
    
        IF :NEW.ID_PROVEEDOR <> :OLD.ID_PROVEEDOR THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PEDIDO', 'ID PROVEEDOR', 'ACTUALIZACION', :OLD.ID_PROVEEDOR, :NEW.ID_PROVEEDOR);
    END IF;

        IF :NEW.COMPOSICION_BASE <> :OLD.COMPOSICION_BASE THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PEDIDO', 'COMPOSICION BASE', 'ACTUALIZACION', :OLD.COMPOSICION_BASE, :NEW.COMPOSICION_BASE);
    END IF;
    
     IF :NEW.COLORANTE <> :OLD.COLORANTE THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PEDIDO', 'COLORANTE', 'ACTUALIZACION', :OLD.COLORANTE, :NEW.COLORANTE);
    END IF;

    END IF;
END;    

CREATE OR REPLACE TRIGGER TRG_BDR_PEDIDO
BEFORE DELETE ON PEDIDO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN

 INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PEDIDO', 'ID PEDIDO', 'ELIMINACION_PEDIDO', :OLD.ID_PEDIDO, :NEW.ID_PEDIDO);

INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PEDIDO', 'ID PROVEEDOR', 'ELIMINACION_PEDIDO', :OLD.ID_PROVEEDOR, :NEW.ID_PROVEEDOR);

INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PEDIDO', 'COMPOSICION BASE', 'ELIMINACION_PEDIDO', :OLD.COMPOSICION_BASE, :NEW.COMPOSICION_BASE);

INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'PEDIDO', 'COLORANTE', 'ELIMINACION_PEDIDO', :OLD.COLORANTE, :NEW.COLORANTE);

END;



CREATE OR REPLACE TRIGGER TRG_AIUR_HERRAMIENTA
AFTER INSERT OR UPDATE ON HERRAMIENTA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN 
INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'HERRAMIENTA', 'Nueva HERRAMIENTA', 'INSERCION' , 'Nueva HERRAMIENTA', :NEW.NOMBRE);
    END IF;
    
    IF UPDATING THEN
    
    IF :NEW.ID_HERRAMIENTA <> :OLD.ID_HERRAMIENTA THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'HERRAMIENTA', 'ID HERRAMIENTA', 'ACTUALIZACION', :OLD.ID_HERRAMIENTA, :NEW.ID_HERRAMIENTA);
    END IF;
    
        IF :NEW.NOMBRE <> :OLD.NOMBRE THEN
    INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'HERRAMIENTA', 'NOMBRE', 'ACTUALIZACION', :OLD.NOMBRE, :NEW.NOMBRE);
    END IF;

    END IF;
END;    

CREATE OR REPLACE TRIGGER TRG_BDR_HERRAMIENTA
BEFORE DELETE ON HERRAMIENTA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN

 INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'HERRAMIENTA', 'ID HERRAMIENTA', 'ELIMINACION HERRAMIENTA', :OLD.ID_HERRAMIENTA, :NEW.ID_HERRAMIENTA);

INSERT INTO BITACORAPROYECTO1(ID_BITACORAPROYECTO, USUARIO, FECHA, TABLA, CAMPO_MODIFICADO, ACCION, DATO_ANTERIOR, DATO_NUEVO)
 VALUES(ID_BITACORA.NEXTVAL, USER, SYSDATE, 'HERRAMIENTA', 'NOMBRE', 'ELIMINACION HERRAMIENTA', :OLD.NOMBRE, :NEW.NOMBRE);

END;
   
/*FUNCIONES*/
CREATE OR REPLACE FUNCTION CUSTOM_AUTH (
	P_USERNAME IN VARCHAR2,
	P_PASSWORD IN VARCHAR2)
RETURN BOOLEAN IS
BEGIN
	FOR C1 IN (SELECT 1
		FROM EMPLEADO
		WHERE UPPER(CORREO) = UPPER(P_USERNAME)
		AND UPPER(CONTRASENA) = UPPER(P_PASSWORD))
	LOOP
	RETURN TRUE;
	END LOOP;
RETURN FALSE;
END;


/*PROCEDIMIENTOS*/
CREATE OR REPLACE PROCEDURE "EMAIL_SAMPLE"
(
P_FROM IN VARCHAR2,
	P_BODY IN NVARCHAR2
)
AS
BEGIN
APEX_MAIL.SEND(
	P_FROM => P_FROM,
	P_TO => 'JORGEAGUILAR040894@GMAIL.COM',
	P_SUBJ => 'MENSAJE DESDE APP BD1',
	P_BODY => P_BODY,
	P_BODY_HTML => P_BODY);
END
EMAIL_SAMPLE;


